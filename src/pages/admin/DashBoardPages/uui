
// import { useState } from "react";
// import { AgGridReact } from "ag-grid-react";
// import "ag-grid-community/styles/ag-grid.css";
// import { ColDef } from "ag-grid-community";
// import "ag-grid-community/styles/ag-theme-quartz.css";
// import useAdminHooks from "@/hooks/useAdminHooks";
// const DataTable = () => {
//   const { data, isFetching } = useAdminHooks("getHospital", "auth");
//   console.log(data);
//   const [colDefs] = useState<ColDef[]>([
//     { field: "fullname", editable: true, flex: 3 },
//     { field: "mobile", flex: 6 },
//     { field: "email", flex: 6 },
//     { field: "role" },
//   ]);

//   if (isFetching) {
//     return "loaing";
//   }
//   return (
//     <div className="ag-theme-quartz" style={{ height: 500 }}>
//       <AgGridReact rowData={data} columnDefs={colDefs} />
//     </div>
//   );
// };

// export default DataTable;
   {/* <div>
            <label
              htmlFor="email"
              className="block  mb-2   text-sm font-medium text-gray-900 dark:text-gray-300"
            >
              Select User
            </label>
            <Select
              onValueChange={(newValue) => {
                console.log(newValue);
              }}
            >
              <SelectTrigger className="w-[280px]">
                <SelectValue placeholder="UserList" />
              </SelectTrigger>
              <SelectContent>
                {(data as UserDataProps[]).map((ele, id) => (
                  <SelectItem key={id} value={ele._id}>
                    {ele.fullname}
                  </SelectItem>
                ))}
              </SelectContent>
            </Select>
          </div> */}